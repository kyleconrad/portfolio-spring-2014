/* All coding, design, ideas, fantastical inventions, etc. etc. copyright 2016 Kyle Conrad */
/* Contact: kyle@kyleconrad.com */
/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* MIX-INS */
/* ADDITIONAL RESET */
html {
  min-height: 100%;
  height: 100%;
  -webkit-text-size-adjust: none; }
  @media only screen and (min-width: 1401px) {
    html {
      font-size: 110%; } }
  @media only screen and (min-width: 802px) and (max-width: 1025px) {
    html {
      font-size: 95%; } }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    html {
      font-size: 85%; } }
  @media only screen and (max-width: 641px) {
    html {
      font-size: 85%; } }

body {
  height: 100%;
  width: 100%;
  position: relative;
  overflow-x: hidden; }

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }
  *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }

/* CLEAR */
.clearfix:after {
  clear: both;
  display: table;
  content: ''; }

/* INCLUDED */
/* GRID */
nav,
div,
article,
section,
footer,
header {
  display: block;
  position: relative;
  margin: 0;
  padding: 0;
  width: 100%; }

#main-header,
.about-footer,
#about,
#hero-stranger,
footer {
  z-index: 999; }

nav {
  z-index: 500; }

.column {
  width: 80%;
  margin: 0 auto;
  max-width: 1350px; }
  @media only screen and (min-width: 802px) and (max-width: 1025px) {
    .column {
      width: 84%; } }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    .column {
      width: 86%; } }
  @media only screen and (max-width: 641px) {
    .column {
      width: 90%; } }

.grid_row {
  clear: both;
  width: 100%; }

.full,
.half,
.third,
.two-third {
  margin-bottom: 20px; }

.full {
  clear: both;
  width: 100%; }

.half {
  width: 50%;
  padding-right: 10px;
  padding-left: 0; }
  .half:last-child {
    padding-right: 0;
    padding-left: 10px; }
    @media only screen and (max-width: 641px) {
      .half:last-child {
        padding-left: 0;
        padding-right: 0; } }

.no-margin-btm {
  margin-bottom: 0; }

.third {
  width: -moz-calc(100% / 3);
  width: -o-calc(100% / 3);
  width: -webkit-calc(100% / 3);
  width: calc(100% / 3);
  padding-right: 14px;
  padding-left: 14px; }
  .third:first-child {
    padding-left: 0; }
    @media only screen and (max-width: 641px) {
      .third:first-child {
        padding-left: 0;
        padding-right: 0; } }
  .third:not(:first-child):not(:last-child) {
    padding-left: 7px;
    padding-right: 7px; }
    @media only screen and (max-width: 641px) {
      .third:not(:first-child):not(:last-child) {
        padding-left: 0;
        padding-right: 0; } }
  .third:last-child {
    padding-right: 0; }
    @media only screen and (max-width: 641px) {
      .third:last-child {
        padding-left: 0;
        padding-right: 0; } }

.two-third {
  width: -moz-calc((100% / 3) * 2);
  width: -o-calc((100% / 3) * 2);
  width: -webkit-calc((100% / 3) * 2);
  width: calc((100% / 3) * 2);
  padding-right: 6px;
  padding-left: 0; }
  .two-third:last-child {
    padding-left: 6px;
    padding-right: 0; }
    @media only screen and (max-width: 641px) {
      .two-third:last-child {
        padding-left: 0;
        padding-right: 0; } }

.half,
.third,
.two-third {
  float: left; }
  @media only screen and (max-width: 641px) {
    .half,
    .third,
    .two-third {
      width: 100%;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0; } }

/* GLYPHS */
/* TEXT SETTINGS */
* {
  -moz-font-feature-settings: "kern" 1, "liga" 1, "clig" 1, "calt" 1;
  -ms-font-feature-settings: "kern" 1, "liga" 1, "clig" 1, "alt" 1;
  -webkit-font-feature-settings: "kern" 1, "liga" 1, "clig" 1, "calt" 1;
  font-feature-settings: "kern" 1, "liga" 1, "clig" 1, "calt" 1;
  -webkit-font-kerning: normal;
  -moz-font-kerning: normal;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual; }

h1,
h2,
h3,
.nav-link,
.big-button,
.work-detail,
.work-person,
.caption,
.client-list {
  font-family: "futura-pt", sans-serif;
  font-weight: 700;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

h1 {
  text-transform: uppercase;
  font-size: 1rem;
  color: #1a1a1a; }

h2 {
  color: white;
  font-size: 3.75rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.5);
  padding-bottom: 1rem;
  margin-bottom: 1.5rem;
  letter-spacing: -0.025em; }
  @media only screen and (max-width: 641px) {
    h2 {
      white-space: normal;
      line-height: 0.9;
      font-size: 2.75rem; } }

h3 {
  text-transform: uppercase;
  margin: 0 auto 1rem;
  font-size: 0.8rem;
  color: rgba(26, 26, 26, 0.25); }

p {
  color: white;
  font-size: 1.2rem;
  line-height: 1.6;
  font-family: Georgia, serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern=1";
  font-feature-settings: "kern" 1;
  font-kerning: normal; }
  #about p {
    color: #1a1a1a;
    margin: 0 auto;
    margin-bottom: 1em; }
    #about p:last-child {
      margin-bottom: 0; }
  p a {
    color: #1a1a1a;
    text-transform: uppercase;
    font-family: "futura-pt", sans-serif;
    font-weight: 700;
    text-decoration: none;
    font-size: 0.8em; }
    p a:hover {
      text-decoration: underline; }
    .work-block p a {
      color: white; }
  p strong {
    font-weight: bold; }
  p em {
    font-style: italic; }

.client-list {
  display: block;
  margin: 0 auto;
  color: #1a1a1a;
  font-size: 0.9rem;
  line-height: 1.35; }

hr {
  display: block;
  margin: 3.5rem auto;
  border: 0;
  height: 1px;
  background: rgba(0, 0, 0, 0.075); }

h3,
hr,
#about p,
.client-list {
  width: 55%;
  max-width: 700px; }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    h3,
    hr,
    #about p,
    .client-list {
      width: 70%; } }
  @media only screen and (max-width: 641px) {
    h3,
    hr,
    #about p,
    .client-list {
      width: 100%; } }

footer a {
  color: #1a1a1a;
  text-transform: uppercase;
  font-family: "futura-pt", sans-serif;
  font-weight: 700;
  text-decoration: none;
  font-size: 1.1rem;
  display: block;
  padding: 0.75rem 0;
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern";
  -moz-font-feature-settings: "kern=1";
  font-feature-settings: "kern" 1;
  font-kerning: normal; }
  footer a:hover {
    text-decoration: underline; }

.nav-link {
  text-decoration: none;
  text-transform: uppercase;
  color: white;
  font-size: 0.75rem;
  letter-spacing: 0.5em;
  text-indent: 0.45em; }
  .desktop .nav-link:hover, .desktop .nav-link:active {
    color: #1a1a1a; }

.big-button {
  text-decoration: none;
  text-transform: uppercase;
  color: white;
  display: inline-block;
  text-align: center;
  border: 2px solid white;
  font-size: 0.75rem;
  margin-top: 2.5rem;
  width: 100%;
  line-height: 1.25;
  letter-spacing: 0.5em;
  padding: 1.65em 1.25em;
  text-indent: 0.3em; }
  .big-button:hover, .big-button:active {
    background: white; }

.work-detail {
  font-size: 0.875rem;
  text-transform: uppercase;
  display: block;
  color: white;
  padding-bottom: 0.35em; }

.work-person {
  letter-spacing: 0.075em;
  font-size: 0.675rem;
  text-transform: uppercase;
  display: block;
  color: white;
  line-height: 1.5;
  opacity: 0.8;
  padding-top: 1.25rem; }
  .work-person a {
    text-decoration: none;
    color: white;
    border-bottom: 1px dotted white; }
    .work-person a:hover {
      border-bottom-style: solid; }

.spacer {
  margin-left: 1em;
  margin-right: 1em;
  font-weight: 400; }

.caption {
  font-size: 0.75rem;
  text-transform: uppercase;
  color: white;
  letter-spacing: 0.025em;
  display: block;
  line-height: 1.3; }

/* IMAGES */
img {
  display: block;
  width: 100%;
  height: auto;
  border: 0;
  outline: none; }
  img.bordered {
    border: 1px solid rgba(0, 0, 0, 0.15); }
  img.lazyload {
    background-color: rgba(0, 0, 0, 0.15);
    background-image: url("../img/load.gif");
    background-repeat: no-repeat;
    background-size: 24px 24px;
    background-position: center center; }
    @media only screen and (max-width: 641px) {
      img.lazyload {
        background-size: 16px 16px; } }
  img.padded {
    padding: 0.75rem 2.5rem 1.5rem; }
    @media only screen and (max-width: 641px) {
      img.padded {
        padding: 0.7rem 0 1.5rem; } }

#ampersand {
  -webkit-transform: translateX(-3px);
  -moz-transform: translateX(-3px);
  -ms-transform: translateX(-3px);
  -o-transform: translateX(-3px);
  transform: translateX(-3px); }

.nav-link-top img {
  height: 100%;
  width: auto;
  padding: 15px;
  padding-left: 0px; }
  @media only screen and (max-width: 641px) {
    .nav-link-top img {
      padding: 10px;
      padding-left: 0; } }

/* NAV BAR */
nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 60px;
  background: #1a1a1a;
  border-bottom: 1px solid white;
  opacity: 0.85; }
  nav .column {
    height: 100%; }
  .desktop nav {
    opacity: 0.25;
    -webkit-transition: 0.25s;
    -moz-transition: 0.25s;
    transition: 0.25s; }
    .desktop nav:hover {
      opacity: 1; }
  @media only screen and (max-width: 641px) {
    nav {
      height: 50px; } }

.nav-link-top {
  display: block;
  height: 100%;
  width: auto;
  float: left; }

.nav-link-list {
  float: right;
  height: 100%;
  display: block;
  border-right: 1px solid white; }
  .nav-link-list li {
    float: left;
    display: table;
    height: 100%;
    border-left: 1px solid white; }

.nav-link {
  display: table-cell;
  height: 100%;
  vertical-align: middle;
  padding: 0 2em; }
  .desktop .nav-link:hover, .desktop .nav-link:active {
    background: white; }
  .nav-link.inactive {
    opacity: 0.5;
    pointer-events: none;
    cursor: default; }

/* HEADER */
#main-header {
  height: 98vh;
  background: url("/img/hero.jpg") no-repeat, white;
  background-size: cover;
  background-position: center center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.15); }
  #main-header .hero {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    width: 7.5rem;
    z-index: 2; }
    @media only screen and (min-width: 802px) and (max-width: 1025px) {
      #main-header .hero {
        width: 7rem; } }
  #main-header:after {
    position: absolute;
    display: block;
    top: 50%;
    left: 50%;
    width: 12rem;
    height: calc(12rem - 1px);
    background: #1a1a1a;
    z-index: 1;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: ''; }
    @media only screen and (min-width: 802px) and (max-width: 1025px) {
      #main-header:after {
        width: 11.5rem;
        height: 11.5rem; } }

.hero-image {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center 5%;
  height: 30rem;
  border-top: 1px solid rgba(0, 0, 0, 0.35); }
  .hero-image:after {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 80%;
    z-index: 2;
    display: block;
    content: ""; }
  @media only screen and (min-width: 1401px) {
    .hero-image {
      height: 36rem; } }

#hero-stranger {
  height: 98vh;
  background: url("/img/upside-down.jpg") no-repeat, black;
  background-size: cover;
  background-position: center center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.15); }
  #hero-stranger:after {
    position: absolute;
    display: block;
    top: 7.5%;
    left: 50%;
    width: 4.5rem;
    height: calc(4.5rem - 1px);
    background: black;
    z-index: 1;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    content: ''; }

.logo-stranger {
  position: absolute;
  top: 7.5%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  width: 3rem;
  z-index: 2; }

.title-stranger {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  -moz-transform: translate3d(-50%, -50%, 0);
  -ms-transform: translate3d(-50%, -50%, 0);
  -o-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  width: 30rem;
  max-width: 85%; }

.credits-stranger {
  position: absolute;
  bottom: 6%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  width: 10rem;
  z-index: 2;
  max-width: 65%; }

/* MAIN AREAS */
.work-block {
  padding-bottom: 5.5rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.15); }

.work-content {
  z-index: 5;
  margin-top: -13rem; }

.work-info {
  width: 40%;
  padding-right: 11%; }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    .work-info {
      padding-right: 8%; } }
  @media only screen and (max-width: 641px) {
    .work-info {
      padding-bottom: 2rem; }
      .work-info .big-button {
        display: none; } }

.work-description {
  width: 60%;
  padding-bottom: 4rem;
  margin-top: -0.35rem; }
  .work-description .big-button {
    display: none; }
    @media only screen and (max-width: 641px) {
      .work-description .big-button {
        display: block; } }

.work-info,
.work-description {
  float: left; }
  @media only screen and (max-width: 641px) {
    .work-info,
    .work-description {
      float: none;
      width: 100%; } }

.about-footer {
  background: white; }

#about {
  padding: 6rem 0 0;
  background: white; }
  #about:before {
    position: absolute;
    top: -1px;
    left: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0.2);
    display: block;
    height: 1px;
    content: ""; }

/* WORK */
.browser {
  width: 100%;
  height: 34px;
  background-image: url("/img/browser-btn.png"), url("/img/browser-chrome.png");
  background-repeat: no-repeat, repeat-x;
  background-size: auto 100%;
  background-position: left center;
  border-radius: 5px 5px 0 0;
  z-index: 10;
  position: relative; }
  .browser:after {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: rgba(0, 0, 0, 0.2);
    display: block;
    content: ''; }
  @media only screen and (min-width: 802px) and (max-width: 1025px) {
    .browser {
      height: 28px; } }
  @media only screen and (min-width: 642px) and (max-width: 801px) {
    .browser {
      height: 24px; } }
  @media only screen and (max-width: 641px) {
    .browser {
      height: 18px;
      border-radius: 3px 3px 0 0; } }

.video-load.browser-video {
  padding-top: 56.54296875%;
  background-color: rgba(0, 0, 0, 0.15);
  background-image: url("/img/load.gif");
  background-repeat: no-repeat;
  background-size: 24px 24px;
  background-position: center center; }
  @media only screen and (max-width: 641px) {
    .video-load.browser-video {
      background-size: 16px 16px; } }

.fluid-width-video-wrapper {
  -webkit-transform: rotate(0deg);
  -moz-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  -o-transform: rotate(0deg);
  transform: rotate(0deg);
  border-radius: 0 0 5px 5px;
  overflow: hidden; }

#doom {
  background: #de1133; }
  #doom .hero-image {
    background-image: url("/img/doom/hero.jpg");
    background-position: right 5%; }
    @media only screen and (max-width: 641px) {
      #doom .hero-image {
        background-position: 45% 5%; } }
    #doom .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(222, 17, 51, 0) 0%, #de1133 100%);
      background-image: linear-gradient(to bottom, rgba(222, 17, 51, 0) 0%, #de1133 100%); }
  #doom.iddqd .hero-image {
    background-image: url("/img/doom/hero-dqd.jpg"); }
  #doom.idkfa .hero-image {
    background-image: url("/img/doom/hero-kfa.jpg"); }

#starwars {
  background: #b89e4e; }
  #starwars .hero-image {
    background-image: url("/img/starwars/hero.jpg"); }
    #starwars .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(184, 158, 78, 0) 0%, #b89e4e 100%);
      background-image: linear-gradient(to bottom, rgba(184, 158, 78, 0) 0%, #b89e4e 100%); }
  #starwars .big-button:hover {
    color: #b89e4e; }

#nclud {
  background: #ac2eff; }
  #nclud .hero-image {
    background-image: url("/img/nclud/hero.jpg");
    background-position: right 5%; }
    @media only screen and (max-width: 641px) {
      #nclud .hero-image {
        background-position: 40% 5%; } }
    #nclud .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(172, 46, 255, 0) 0%, #ac2eff 100%);
      background-image: linear-gradient(to bottom, rgba(172, 46, 255, 0) 0%, #ac2eff 100%); }
  #nclud .big-button:hover {
    color: #ac2eff; }

#nbcsports {
  background: #f1a536; }
  #nbcsports .hero-image {
    background-image: url("/img/nbcsports/hero.jpg"); }
    #nbcsports .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(241, 165, 54, 0) 0%, #f1a536 100%);
      background-image: linear-gradient(to bottom, rgba(241, 165, 54, 0) 0%, #f1a536 100%); }

#worldofx {
  background: #d8232a; }
  #worldofx .hero-image {
    background-image: url("/img/worldofx/hero.jpg"); }
    #worldofx .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(216, 35, 42, 0) 0%, #d8232a 100%);
      background-image: linear-gradient(to bottom, rgba(216, 35, 42, 0) 0%, #d8232a 100%); }
  #worldofx .big-button:hover {
    color: #d8232a; }

#thisweeksplaylist {
  background: #121212; }
  #thisweeksplaylist .hero-image {
    background-image: url("/img/thisweeksplaylist/hero.jpg"); }
    @media only screen and (max-width: 641px) {
      #thisweeksplaylist .hero-image {
        background-position: 20% top; } }
    #thisweeksplaylist .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(18, 18, 18, 0) 0%, #121212 100%);
      background-image: linear-gradient(to bottom, rgba(18, 18, 18, 0) 0%, #121212 100%); }
  #thisweeksplaylist .big-button:hover {
    color: #121212; }

#tesla {
  background: #f10600; }
  #tesla .hero-image {
    background-image: url("/img/tesla/hero.jpg"); }
    @media only screen and (max-width: 641px) {
      #tesla .hero-image {
        background-position: 17% top; } }
    #tesla .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(241, 6, 0, 0) 0%, #f10600 100%);
      background-image: linear-gradient(to bottom, rgba(241, 6, 0, 0) 0%, #f10600 100%); }

#giffffr {
  background: #ff007f; }
  #giffffr .hero-image {
    background-image: url("/img/giffffr/hero.gif"), url("/img/giffffr/hero.jpg");
    background-size: cover, cover;
    background-position: center bottom, center bottom; }
    #giffffr .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(255, 0, 127, 0) 0%, #ff007f 100%);
      background-image: linear-gradient(to bottom, rgba(255, 0, 127, 0) 0%, #ff007f 100%); }
  #giffffr .big-button:hover {
    color: #ff007f; }

#mfstrangers {
  background: #8e44ad; }
  #mfstrangers .hero-image {
    background-image: url("/img/mfstrangers/hero.jpg");
    background-position: center center; }
    #mfstrangers .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(142, 68, 173, 0) 0%, #8e44ad 100%);
      background-image: linear-gradient(to bottom, rgba(142, 68, 173, 0) 0%, #8e44ad 100%); }
  #mfstrangers .big-button:hover {
    color: #8e44ad; }

#hotcars {
  background: #0076be; }
  #hotcars .hero-image {
    background-image: url("/img/hotcars/hero.jpg"); }
    #hotcars .hero-image:after {
      background-image: -webkit-linear-gradient( top , rgba(0, 118, 190, 0) 0%, #0076be 100%);
      background-image: linear-gradient(to bottom, rgba(0, 118, 190, 0) 0%, #0076be 100%); }
  #hotcars .big-button:hover {
    color: #0076be; }

/* FOOTER */
footer {
  padding: 0 0 12rem;
  text-align: center;
  background: white; }
  footer ul {
    width: 55%;
    max-width: 700px;
    margin: 0 auto 8rem; }
    @media only screen and (min-width: 642px) and (max-width: 801px) {
      footer ul {
        width: 70%; } }
    @media only screen and (max-width: 641px) {
      footer ul {
        width: 100%; } }
  footer li {
    display: block;
    width: 100%;
    text-align: center; }

#dmx {
  width: 5rem;
  height: 5rem;
  display: block;
  margin: 0 auto;
  position: relative;
  opacity: 0.1; }
  #dmx:before, #dmx:after {
    display: block;
    width: 100%;
    top: 40%;
    height: 0.75rem;
    background: #1a1a1a;
    position: absolute;
    content: ''; }
  #dmx:before {
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -o-transform: rotate(45deg);
    transform: rotate(45deg); }
  #dmx:after {
    -webkit-transform: rotate(-45deg);
    -moz-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -o-transform: rotate(-45deg);
    transform: rotate(-45deg); }

/* ANIMATION */
#pupil {
  -webkit-animation: shifty 7s ease;
  -moz-animation: shifty 7s ease;
  animation: shifty 7s ease;
  -webkit-animation-delay: 3s;
  -moz-animation-delay: 3s;
  animation-delay: 3s;
  -webkit-animation-iteration-count: infinite;
  -moz-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

@-webkit-keyframes shifty {
  0% {
    -webkit-transform: translate3d(0, 0, 0); }
  14% {
    -webkit-transform: translate3d(0, 0, 0); }
  25% {
    -webkit-transform: translate3d(-20px, 0, 0); }
  27% {
    -webkit-transform: translate3d(-20px, 0, 0); }
  42% {
    -webkit-transform: translate3d(20px, 0, 0); }
  44% {
    -webkit-transform: translate3d(20px, 0, 0); }
  55% {
    -webkit-transform: translate3d(0, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0); } }

@-moz-keyframes shifty {
  0% {
    -moz-transform: translate3d(0, 0, 0); }
  14% {
    -moz-transform: translate3d(0, 0, 0); }
  25% {
    -moz-transform: translate3d(-20px, 0, 0); }
  27% {
    -moz-transform: translate3d(-20px, 0, 0); }
  42% {
    -moz-transform: translate3d(20px, 0, 0); }
  44% {
    -moz-transform: translate3d(20px, 0, 0); }
  55% {
    -moz-transform: translate3d(0, 0, 0); }
  100% {
    -moz-transform: translate3d(0, 0, 0); } }

@keyframes shifty {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  14% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  25% {
    -webkit-transform: translate3d(-20px, 0, 0);
    -moz-transform: translate3d(-20px, 0, 0);
    -ms-transform: translate3d(-20px, 0, 0);
    -o-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0); }
  27% {
    -webkit-transform: translate3d(-20px, 0, 0);
    -moz-transform: translate3d(-20px, 0, 0);
    -ms-transform: translate3d(-20px, 0, 0);
    -o-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0); }
  42% {
    -webkit-transform: translate3d(20px, 0, 0);
    -moz-transform: translate3d(20px, 0, 0);
    -ms-transform: translate3d(20px, 0, 0);
    -o-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0); }
  44% {
    -webkit-transform: translate3d(20px, 0, 0);
    -moz-transform: translate3d(20px, 0, 0);
    -ms-transform: translate3d(20px, 0, 0);
    -o-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0); }
  55% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); } }

.title-stranger {
  -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25));
  filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25));
  -webkit-animation: stranger-glow 7s ease;
  -moz-animation: stranger-glow 7s ease;
  animation: stranger-glow 7s ease;
  -webkit-animation-iteration-count: infinite;
  -moz-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

@-webkit-keyframes stranger-glow {
  0% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25)); }
  25% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 25px rgba(229, 42, 38, 0.65)); }
  50% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.5)); }
  75% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 20px rgba(229, 42, 38, 0.35)); }
  100% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25)); } }

@-moz-keyframes stranger-glow {
  0% { }
  25% { }
  50% { }
  75% { }
  100% { } }

@keyframes stranger-glow {
  0% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25));
    filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25)); }
  25% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 25px rgba(229, 42, 38, 0.65));
    filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 25px rgba(229, 42, 38, 0.65)); }
  50% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.5));
    filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.5)); }
  75% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 20px rgba(229, 42, 38, 0.35));
    filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 20px rgba(229, 42, 38, 0.35)); }
  100% {
    -webkit-filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25));
    filter: drop-shadow(0px 0px 10px #e52a26) drop-shadow(0px 0px 15px rgba(229, 42, 38, 0.25)); } }

/*# sourceMappingURL=data:application/json;base64, */
